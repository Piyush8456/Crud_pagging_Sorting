@model  UoW_Repository.Models.ViewModel.EmployeesViewModel


<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Index</title>
    <style>
        html,
        body {
            height: 100%;
        }

        body {
            margin: 0;
            background: linear-gradient(45deg, #49a09d, #5f2c82);
            font-family: sans-serif;
            font-weight: 100;
        }

        .container {
            position: relative;
            margin: 0 auto; /* Center horizontally */
            max-width: 800px; /* Set maximum width */
            padding: 0 15px; /* Add padding for better layout */
            box-sizing: border-box;
        }
        table {
            margin: 0 auto; /* Center horizontally */
            border-collapse: collapse;
            overflow: hidden;
            box-shadow: 0 0 20px rgba(0,0,0,0.1);
            width: 100%;
            max-width: 1200px;
        }
      .pagination {
        display: flex;
        justify-content: center;
        width: 100%;
        max-width: 1200px; /* Adjust as needed */
        margin-top: 20px; /* Add some spacing */
    }

    .pagination button {
        font-size: 1.5em; /* Adjust the font size */
        margin: 0 5px; /* Add some spacing between buttons */
    }

        th,
        td {
            padding: 15px;
            background-color: rgba(255,255,255,0.2);
            color: #fff;
        }

        th {
            text-align: left;
        }

        thead {
            th{
            background-color: #55608f;
        }

        }

        tbody {
            tr{ &:hover {
            background-color: rgba(255,255,255,0.3);
        }

        }
        td {
            position: relative;
            &:hover{
            &:before{
            content: "";
            position: absolute;
            left: 0;
            right: 0;
            top: -9999px;
            bottom: -9999px;
            background-color: rgba(255,255,255,0.2);
            z-index: -1;
        }

        }
        }
        }
        .form-select {
            background-color: rgba(255,255,255,0.2);
        }
        .currentPage {
            background-color: #212529 !important; /* Blue color for example */
            color: white !important;
        }
    </style>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"
          integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
            integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
</head>

<body>

    @using (Html.BeginForm())
    {

        <div class="row">
            <div class="col-sm-1">
                <label for="itemsPerPage" class="w-100">Page Items:</label>
                <select id="itemsPerPage" name="itemsPerPage" class="form-select mb-5 custom-select-sm" style="background-color: black; color:white">
                    <option value="5">5</option>
                    <option value="10">10</option>
                    <option value="15">15</option>
                    <option value="20">20</option>
                </select>
            </div>

            <div class="col-sm-3">
                <label for="SortColumn">Sort Column:</label>
                <select id="SortColumn" name="SortColumn" class="form-select" style="background-color: black; color:white">
                    @foreach (SelectListItem item in Model.ColumnNames)
                    {
                        <option value="@item.Value">@item.Text</option>
                    }
                </select>
            </div>

            <div class="col-sm-3">
                <label for="SortDirection">Sort Direction:</label>
                <select id="SortDirection" name="SortDirection" class="form-select" style="background-color: black; color:white;">
                    <option value="ASC">Ascending</option>
                    <option value="DESC">Descending</option>
                </select>
            </div>

            <div class="col-sm-3">
                <label for="txtSearch">Search:</label>
                <div class="input-group mb-3">
                    <input type="text" class="form-control p-1" id="txtSearch" name="SearchTerm" placeholder="Search..." style="width: 150px; height: 30px;" />
                    <button class="btn " type="button" id="btnSearch" style="background-color: #2c3034; color:whitesmoke">Search</button>
                </div>
            </div>
        </div>
    }

    <table class="tbl">
        <thead>
            <tr>
                <th>Employee Id</th>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Mobile Number</th>
            </tr>
        </thead>
        <tbody id="WebGrid"></tbody>
    </table>
    <div class="pagination" id="pagination"></div>
    <script>
        var url = '@Url.Action("Employees", "Data")'
console.log(url);
        function loadData(page) {
            debugger
            currentPage = page;
            var pageSize = $('#itemsPerPage').val();
            var sortColumn = $('#SortColumn').val();
            var sortDirection = $('#SortDirection').val();
            var searchTerm = $('#txtSearch').val();

            $.ajax({
    type: "GET",
                url: '@Url.Action("Employees", "Data")',

                data: {
                    pageNumber: page,
        pageSize: pageSize,
        sortColumn: sortColumn,
        sortDirection: sortDirection,
        searchTerm: searchTerm,
    },
    dataType: "json",
                success: function (response) {
                    debugger
        console.log(response);
        console.log('success', response.FullResult);
        var totalCount = response.FullResult.length;
        var html = '';
                    for (var i = 0; i < response.FilteredResult.length; i++) {
                        var employee = response.FilteredResult[i];
                        console.log('response'+response);
            html += '<tr>';
            html += '<td>' + employee.employeeId + '</td>';
            html += '<td>' + employee.firstName + '</td>';
            html += '<td>' + employee.lastName + '</td>';
            html += '<td>' + employee.mobileNumber + '</td>';
            html += '</tr>';
        }
                    $('#WebGrid').html(html);
                    renderPagination(response.SearchedTerm ? Math.ceil(parseInt(response.SearchedTerm.length) / parseInt(pageSize)) : Math.ceil(parseInt(totalCount) / parseInt(pageSize)), currentPage);
                },
    error: function (response) {
        alert(response.responseText);
    }
            });

        }


        function renderPagination(totalPages, currentPage) {
            var paginationHtml = '';
            var spaceBetweeen = 2;
            var dots = '<button class="page-link">...</button>';

            if (currentPage > 1) {
                paginationHtml += '<button class="page-link" onclick="loadData(' + (currentPage - 1) + ')">Previous</button>';
            }

            for (var i = 1; i <= totalPages; i++) {
                if (i === 1 || i === totalPages || (i >= currentPage - spaceBetweeen && i <= currentPage + spaceBetweeen)) {
                    paginationHtml += '<button class="page-link' + (currentPage === i ? ' currentPage' : '') + '" onclick="loadData(' + i + ');">' + i + '</button>';
                } else if (paginationHtml.slice(-11) !== dots) {
                    paginationHtml += dots;
                }
            }

            if (currentPage < totalPages) {
                paginationHtml += '<button class="page-link" onclick="loadData(' + (currentPage + 1) + ')">Next</button>';
            }

            $('#pagination').html(paginationHtml);
        }



        $(function () {
            $('#SortDirection, #itemsPerPage').change(function () {
                loadData(1);
            });

            $('#btnSearch').click(function () {
                if ($('#txtSearch').val().length < 3) {
                    alert("You Need To Insert More Than 2 Letters.");
                } else {
                    loadData(1);
                }
            });

            $('#SortColumn').change(function () {
                loadData(1);
            });

            loadData(1);
        });
    </script>
</body>
</html>
